{"ast":null,"code":"/**\n * This file contains some function stubs(ie incomplete functions) that\n * you MUST use to begin the work for calculating the grades.\n *\n * You may need more functions than are currently here...we highly encourage you to define more.\n *\n * Anything that has a type of \"undefined\" you will need to replace with something.\n */\n\nimport { GET_DEFAULT_HEADERS, BASE_API_URL, MY_BU_ID } from \"../globals\";\n\n// const [classList, setClassList] = useState<IClassAssignments[]>([]);\n/**\n * This function might help you write the function below.\n * It retrieves the final grade for a single student based on the passed params.\n * \n * If you are reading here and you haven't read the top of the file...go back.\n */\nexport async function calculateStudentFinalGrade(studentID, classAssignments, klass) {\n  return undefined;\n}\nasync function grabAssignmentWeight(classID) {\n  if (classID === \"\") {\n    const throwaway = [{\n      assignmentId: \"\",\n      classId: \"\",\n      date: \"\",\n      weight: 0\n    }];\n    return throwaway;\n  }\n  const res = await fetch(BASE_API_URL + \"/class/listAssignments/\" + classID + \"?buid=\" + MY_BU_ID, {\n    method: \"GET\",\n    headers: GET_DEFAULT_HEADERS()\n  });\n  const json = await res.json();\n  console.log(json);\n  return json;\n}\n\n/**\n * You need to write this function! You might want to write more functions to make the code easier to read as well.\n * \n *  If you are reading here and you haven't read the top of the file...go back.\n * \n * @param classID The ID of the class for which we want to calculate the final grades\n * @returns Some data structure that has a list of each student and their final grade.\n */\nexport async function calcAllFinalGrade(classID) {\n  let a = await grabAssignmentWeight(classID);\n  console.log(a);\n  return undefined;\n}","map":{"version":3,"names":["GET_DEFAULT_HEADERS","BASE_API_URL","MY_BU_ID","calculateStudentFinalGrade","studentID","classAssignments","klass","undefined","grabAssignmentWeight","classID","throwaway","assignmentId","classId","date","weight","res","fetch","method","headers","json","console","log","calcAllFinalGrade","a"],"sources":["/Users/simonkye/Documents/Spark/spark-fall-2023-software-engineering-assessment-KKeySimon/src/utils/calculate_grade.ts"],"sourcesContent":["/**\n * This file contains some function stubs(ie incomplete functions) that\n * you MUST use to begin the work for calculating the grades.\n *\n * You may need more functions than are currently here...we highly encourage you to define more.\n *\n * Anything that has a type of \"undefined\" you will need to replace with something.\n */\nimport { IUniversityClass, IClassAssignments } from \"../types/api_types\";\nimport { GET_DEFAULT_HEADERS, BASE_API_URL, MY_BU_ID } from \"../globals\";\n\n// const [classList, setClassList] = useState<IClassAssignments[]>([]);\n/**\n * This function might help you write the function below.\n * It retrieves the final grade for a single student based on the passed params.\n * \n * If you are reading here and you haven't read the top of the file...go back.\n */\nexport async function calculateStudentFinalGrade(\n  studentID: string,\n  classAssignments: undefined,\n  klass: IUniversityClass\n): Promise<undefined> {\n  return undefined;\n}\n\nasync function grabAssignmentWeight(classID: string): Promise<IClassAssignments[]> {\n  if (classID === \"\") {\n    const throwaway : IClassAssignments[] = [{\n      assignmentId: \"\",\n      classId: \"\",\n      date: \"\",\n      weight: 0,\n    }]\n    return throwaway;\n  }\n  const res = await fetch(BASE_API_URL + \"/class/listAssignments/\" + classID + \"?buid=\" + MY_BU_ID, {\n    method: \"GET\",\n    headers: GET_DEFAULT_HEADERS(),\n  });\n  const json = await res.json();\n  console.log(json)\n  return json;\n}\n\n/**\n * You need to write this function! You might want to write more functions to make the code easier to read as well.\n * \n *  If you are reading here and you haven't read the top of the file...go back.\n * \n * @param classID The ID of the class for which we want to calculate the final grades\n * @returns Some data structure that has a list of each student and their final grade.\n */\nexport async function calcAllFinalGrade(classID: string): Promise<undefined> {\n  let a = await grabAssignmentWeight(classID);\n  console.log(a) \n  return undefined;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,mBAAmB,EAAEC,YAAY,EAAEC,QAAQ,QAAQ,YAAY;;AAExE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,eAAeC,0BAA0B,CAC9CC,SAAiB,EACjBC,gBAA2B,EAC3BC,KAAuB,EACH;EACpB,OAAOC,SAAS;AAClB;AAEA,eAAeC,oBAAoB,CAACC,OAAe,EAAgC;EACjF,IAAIA,OAAO,KAAK,EAAE,EAAE;IAClB,MAAMC,SAA+B,GAAG,CAAC;MACvCC,YAAY,EAAE,EAAE;MAChBC,OAAO,EAAE,EAAE;MACXC,IAAI,EAAE,EAAE;MACRC,MAAM,EAAE;IACV,CAAC,CAAC;IACF,OAAOJ,SAAS;EAClB;EACA,MAAMK,GAAG,GAAG,MAAMC,KAAK,CAACf,YAAY,GAAG,yBAAyB,GAAGQ,OAAO,GAAG,QAAQ,GAAGP,QAAQ,EAAE;IAChGe,MAAM,EAAE,KAAK;IACbC,OAAO,EAAElB,mBAAmB;EAC9B,CAAC,CAAC;EACF,MAAMmB,IAAI,GAAG,MAAMJ,GAAG,CAACI,IAAI,EAAE;EAC7BC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EACjB,OAAOA,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,eAAeG,iBAAiB,CAACb,OAAe,EAAsB;EAC3E,IAAIc,CAAC,GAAG,MAAMf,oBAAoB,CAACC,OAAO,CAAC;EAC3CW,OAAO,CAACC,GAAG,CAACE,CAAC,CAAC;EACd,OAAOhB,SAAS;AAClB"},"metadata":{},"sourceType":"module","externalDependencies":[]}