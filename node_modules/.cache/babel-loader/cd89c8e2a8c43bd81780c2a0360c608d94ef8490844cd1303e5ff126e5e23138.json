{"ast":null,"code":"import _regeneratorRuntime from\"/Users/simonkye/Documents/Spark/spark-fall-2023-software-engineering-assessment-KKeySimon/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/simonkye/Documents/Spark/spark-fall-2023-software-engineering-assessment-KKeySimon/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";/**\n * This file contains some function stubs(ie incomplete functions) that\n * you MUST use to begin the work for calculating the grades.\n *\n * You may need more functions than are currently here...we highly encourage you to define more.\n *\n * Anything that has a type of \"undefined\" you will need to replace with something.\n */import{GET_DEFAULT_HEADERS,BASE_API_URL,MY_BU_ID}from\"../globals\";// const [classList, setClassList] = useState<IClassAssignments[]>([]);\n/**\n * This function might help you write the function below.\n * It retrieves the final grade for a single student based on the passed params.\n * \n * If you are reading here and you haven't read the top of the file...go back.\n */export function calculateStudentFinalGrade(student,classAssignments){var weightDist=new Map();classAssignments.forEach(function(assignment){weightDist.set(assignment.assignmentId,assignment.weight);});var finalGrade=0;Object.keys(student.grades[0]).forEach(function(assignment){finalGrade+=weightDist.get(assignment)/100*parseInt(student.grades[0][assignment]);});return Math.round(finalGrade*100)/100;}function grabAssignmentWeight(_x){return _grabAssignmentWeight.apply(this,arguments);}function _grabAssignmentWeight(){_grabAssignmentWeight=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(classID){var res,json;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"\".concat(BASE_API_URL,\"/class/listAssignments/\").concat(classID,\"?buid=\").concat(MY_BU_ID),{method:\"GET\",headers:GET_DEFAULT_HEADERS()});case 2:res=_context.sent;_context.next=5;return res.json();case 5:json=_context.sent;return _context.abrupt(\"return\",json);case 7:case\"end\":return _context.stop();}},_callee);}));return _grabAssignmentWeight.apply(this,arguments);}function grabStudentsID(_x2){return _grabStudentsID.apply(this,arguments);}function _grabStudentsID(){_grabStudentsID=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(classID){var res,json;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(\"\".concat(BASE_API_URL,\"/class/listStudents/\").concat(classID,\"?buid=\").concat(MY_BU_ID),{method:\"GET\",headers:GET_DEFAULT_HEADERS()});case 2:res=_context2.sent;_context2.next=5;return res.json();case 5:json=_context2.sent;return _context2.abrupt(\"return\",json);case 7:case\"end\":return _context2.stop();}},_callee2);}));return _grabStudentsID.apply(this,arguments);}function grabStudentsData(_x3){return _grabStudentsData.apply(this,arguments);}function _grabStudentsData(){_grabStudentsData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(studentIDArr){var promises,arr;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:promises=studentIDArr.map(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(sid){var res,json;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:_context3.next=2;return fetch(\"\".concat(BASE_API_URL,\"/student/GetById/\").concat(sid,\"?buid=\").concat(MY_BU_ID),{method:\"GET\",headers:GET_DEFAULT_HEADERS()});case 2:res=_context3.sent;_context3.next=5;return res.json();case 5:json=_context3.sent;return _context3.abrupt(\"return\",json[0]);case 7:case\"end\":return _context3.stop();}},_callee3);}));return function(_x8){return _ref.apply(this,arguments);};}());_context4.next=3;return Promise.all(promises);case 3:arr=_context4.sent;return _context4.abrupt(\"return\",arr);case 5:case\"end\":return _context4.stop();}},_callee4);}));return _grabStudentsData.apply(this,arguments);}function grabStudentsGrade(_x4,_x5){return _grabStudentsGrade.apply(this,arguments);}function _grabStudentsGrade(){_grabStudentsGrade=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(classID,studentIDArr){var promises,arr;return _regeneratorRuntime().wrap(function _callee6$(_context6){while(1)switch(_context6.prev=_context6.next){case 0:promises=studentIDArr.map(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(sid){var res,json;return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1)switch(_context5.prev=_context5.next){case 0:_context5.next=2;return fetch(\"\".concat(BASE_API_URL,\"/student/listGrades/\").concat(sid.universityId,\"/\").concat(classID,\"?buid=\").concat(MY_BU_ID),{method:\"GET\",headers:GET_DEFAULT_HEADERS()});case 2:res=_context5.sent;_context5.next=5;return res.json();case 5:json=_context5.sent;return _context5.abrupt(\"return\",json);case 7:case\"end\":return _context5.stop();}},_callee5);}));return function(_x9){return _ref2.apply(this,arguments);};}());_context6.next=3;return Promise.all(promises);case 3:arr=_context6.sent;return _context6.abrupt(\"return\",arr);case 5:case\"end\":return _context6.stop();}},_callee6);}));return _grabStudentsGrade.apply(this,arguments);}function grabCourseInfo(_x6){return _grabCourseInfo.apply(this,arguments);}/**\n * You need to write this function! You might want to write more functions to make the code easier to read as well.\n * \n *  If you are reading here and you haven't read the top of the file...go back.\n * \n * @param classID The ID of the class for which we want to calculate the final grades\n * @returns Some data structure that has a list of each student and their final grade.\n */function _grabCourseInfo(){_grabCourseInfo=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(classID){var res,json;return _regeneratorRuntime().wrap(function _callee7$(_context7){while(1)switch(_context7.prev=_context7.next){case 0:_context7.next=2;return fetch(\"\".concat(BASE_API_URL,\"/class/GetById/\").concat(classID,\"?buid=\").concat(MY_BU_ID),{method:\"GET\",headers:GET_DEFAULT_HEADERS()});case 2:res=_context7.sent;_context7.next=5;return res.json();case 5:json=_context7.sent;return _context7.abrupt(\"return\",json);case 7:case\"end\":return _context7.stop();}},_callee7);}));return _grabCourseInfo.apply(this,arguments);}export function calcAllFinalGrade(_x7){return _calcAllFinalGrade.apply(this,arguments);}function _calcAllFinalGrade(){_calcAllFinalGrade=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8(classID){var assignmentWeightArr,studentIDArr,studentDataArr,gradesPerStudentArr,courseInfo,finalGradesArr;return _regeneratorRuntime().wrap(function _callee8$(_context8){while(1)switch(_context8.prev=_context8.next){case 0:if(!(classID===\"\")){_context8.next=2;break;}return _context8.abrupt(\"return\",[]);case 2:_context8.next=4;return grabAssignmentWeight(classID);case 4:assignmentWeightArr=_context8.sent;_context8.next=7;return grabStudentsID(classID);case 7:studentIDArr=_context8.sent;_context8.next=10;return grabStudentsData(studentIDArr);case 10:studentDataArr=_context8.sent;_context8.next=13;return grabStudentsGrade(classID,studentDataArr);case 13:gradesPerStudentArr=_context8.sent;_context8.next=16;return grabCourseInfo(classID);case 16:courseInfo=_context8.sent;finalGradesArr=[];gradesPerStudentArr.forEach(function(student){finalGradesArr.push({studentId:student.studentId,name:student.name,classId:classID,title:courseInfo.title,semester:\"fall2022\",finalGrade:calculateStudentFinalGrade(student,assignmentWeightArr)});});return _context8.abrupt(\"return\",finalGradesArr);case 20:case\"end\":return _context8.stop();}},_callee8);}));return _calcAllFinalGrade.apply(this,arguments);}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}